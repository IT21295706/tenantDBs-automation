name: Liquibase Migration

on:
  push:
    branches:
      - main  # Change this if needed
    paths:
      - '/opt/liquibase'  # Trigger when changelog.xml is updated
  workflow_dispatch:  

jobs:
  liquibase-update:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4


      - name: Set Up Liquibase
        run: |
          wget https://github.com/liquibase/liquibase/releases/download/v4.25.0/liquibase-4.25.0.zip
          unzip liquibase-4.25.0.zip -d /opt/liquibase
          chmod +x /opt/liquibase/liquibase

          
      - name: Test DB Connection
        run: |
          nc -zv 13.212.238.210 3306

          
      - name: Copy Liquibase Configuration Files
        run: |
          mkdir -p /opt/liquibase  
          cp $GITHUB_WORKSPACE/opt/liquibase/liquibase.properties /opt/liquibase/liquibase.properties
          cp $GITHUB_WORKSPACE/opt/liquibase/changelog.xml /opt/liquibase/changelog.xml
          ls -l /opt/liquibase  

          
      - name: Debug Liquibase Properties
        run: |
          ls -l /opt/liquibase/
          cat /opt/liquibase/liquibase.properties || echo "⚠️ liquibase.properties NOT FOUND!"

          
      - name: Run Liquibase for All Tenants
        run: |
          for i in {1..4}; do
            DB_NAME="tenant$i"
            echo "Running Liquibase for $DB_NAME..."
    
            /opt/liquibase \
              --searchPath=/opt \
              --url="jdbc:mariadb://13.212.238.210:3306/$DB_NAME" \
              --username=root \
              --password=ranuri \
              --changeLogFile=/opt/liquibase/changelog.xml \
              --driver=org.mariadb.jdbc.Driver \
              --log-level=debug \
              update
          done
     
        
          echo "🔄 Running Liquibase update..."       
          /opt/liquibase/liquibase --searchPath=/opt --defaults-file=/opt/liquibase/liquibase.properties update --changelog-file=liquibase/changelog.xml --log-level=debug
          echo "LIQUIBASE_EXIT_CODE=$?" >> $GITHUB_ENV  # Save exit code to GitHub Actions env variable
            

      - name: Print Success Message
        if: env.LIQUIBASE_EXIT_CODE == '0'  # Run only if Liquibase succeeded
        run: echo "✅ Liquibase migration applied successfully!"

        
